{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/room-dev/room-dev.component.ts","./src/app/room-dev/room-dev.component.html","./src/app/room-sm/room-sm.component.ts","./src/app/room-sm/room-sm.component.html","./src/app/startup-screen/startup-screen.component.ts","./src/app/startup-screen/startup-screen.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RoomDevComponent } from './room-dev/room-dev.component'\nimport { RoomSmComponent } from './room-sm/room-sm.component'\nimport { StartupScreenComponent } from './startup-screen/startup-screen.component'\n\nconst routes: Routes = [\n  { path: 'roomdev', component: RoomDevComponent },\n  { path: 'roomsm', component: RoomSmComponent },\n  { path: '', component: StartupScreenComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Angular-chrome-extension';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StartupScreenComponent } from './startup-screen/startup-screen.component';\nimport { RoomDevComponent } from './room-dev/room-dev.component';\nimport { RoomSmComponent } from './room-sm/room-sm.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartupScreenComponent,\n    RoomDevComponent,\n    RoomSmComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { StreamChat, ChannelData, Message, User } from 'stream-chat';\nimport axios from 'axios';\nimport { type } from 'os';\nimport { randomBytes } from 'crypto';\nimport { typeofExpr } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-room-dev',\n  templateUrl: './room-dev.component.html',\n  styleUrls: ['./room-dev.component.scss'],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RoomDevComponent implements OnInit {\n\n  regexuname: RegExp = /^[A-Za-z_]+$/;\n  regexrnumber: RegExp = /\\d\\d\\d/\n  readyToJoin: Boolean = false;\n  title = 'angular-chat';\n  channel: ChannelData;\n  username;\n  roomnumber;\n  messages: Message[] = [];\n  channelList: ChannelData[];\n  chatClient: any;\n  currentUser: User;\n  voteStr: string;\n  textid: any;\n\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n  }\n\n  setupRoom(uname: Text, roomnumber: Text) {\n    this.username = uname;\n    this.username.toString();\n    this.roomnumber = roomnumber;\n    this.roomnumber.toString();\n\n    if (!this.regexuname.test(this.username) || !this.regexrnumber.test(this.roomnumber)) {\n      document.getElementById(\"regexnameWarning\").style.backgroundColor = \"red\";\n      document.getElementById(\"regexnameWarning\").style.backgroundColor = \"red\";\n      document.getElementById(\"regexnameWarning\").innerHTML = \"Username :Only alphanumeric characters and underscore are allowed (Spaces not permitted). <br> Room-Number: Only numbers allowed, min 3 digits.\";\n    }\n    else {\n      this.joinChat();\n    }\n  }\n\n  // u wanted to change the reference of the roomnumber since u need to give it with the API-POST to the new JoinSM-route\n  async joinChat() {\n    const username = this.username;\n    const roomnumber = this.roomnumber;\n    try {\n      // calls server on the join route with username, then recieves token and api key\n      const response = await axios.post('http://localhost:5500/join', {\n        username,\n        roomnumber\n      });\n\n      const { token } = response.data;\n      const apiKey = response.data.api_key;\n      this.chatClient = new StreamChat(apiKey);\n\n      if (response.status == 202) {\n        document.getElementById(\"regexnameWarning\").innerHTML = \"Room doesn't Exist\";\n        return;\n      }\n\n      this.currentUser = await this.chatClient.setUser(\n        {\n          id: username,\n          name: username,\n        },\n        token\n      );\n\n      // connect to channel and listen for new messages\n      const channel = this.chatClient.channel('team', roomnumber);\n      await channel.watch();\n      this.channel = channel;\n      this.readyToJoin = true;\n\n      this.messages = channel.state.messages;\n\n      channel.on('message.new', event => {\n        // add new message to message-array\n        this.messages = [...this.messages, event.message];\n      });\n\n      channel.on('message.updated', event => {\n        // add new message to message-array\n        this.messages = channel.state.messages;\n      });\n\n      const rand = Math.floor(Math.random() * Math.floor(300));\n      this.textid = rand.toString(2);\n\n      try {\n        await this.channel.sendMessage({\n          id: this.textid,\n          text: \"\"\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    } catch (err) {\n      console.log(err);\n      return;\n    }\n  }\n\n  async sendMessage(vote) {\n    this.voteStr = vote.toString();\n    if (this.voteStr === '') {\n      return;\n    }\n\n    const message = { id: this.textid, text: this.voteStr }\n\n    try {\n      await this.chatClient.updateMessage(message);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n","<body>\r\n    <div *ngIf=\"!readyToJoin\">\r\n        <label for=\"uname\">Set your Username:</label><br>\r\n        <input type=\"text\" [(ngModel)]=\"uname\"><br><br>\r\n        <label for=\"roomnumber\">Room Number given by SM:</label><br>\r\n        <input type=\"text\" [(ngModel)]=\"roomnumber\"><br><br>\r\n        <p id=\"regexnameWarning\"></p>\r\n        <button (click)=\"setupRoom(uname,roomnumber)\">Join Room</button>\r\n    </div>\r\n    <div *ngIf=\"readyToJoin\">\r\n        <h1>You can vote now!</h1>\r\n        <h2>Your room number: {{roomnumber}}</h2>\r\n        <br><br><br>\r\n        <button (click)=\"sendMessage(0.5)\">0.5</button>\r\n        <button (click)=\"sendMessage(1)\">1</button>\r\n        <button (click)=\"sendMessage(2)\">2</button>\r\n        <button (click)=\"sendMessage(3)\">3</button>\r\n        <button (click)=\"sendMessage(5)\">5</button>\r\n        <button (click)=\"sendMessage(8)\">8</button>\r\n        <button (click)=\"sendMessage(13)\">13</button>\r\n        <button (click)=\"sendMessage(20)\">20</button>\r\n        <button (click)=\"sendMessage('?')\">?</button>\r\n        <p> Current: {{ channel.state.messages[ channel.state.messages.length - 1 ].text }}</p>\r\n        <li *ngFor=\"let message of messages\">\r\n            {{ message.text }}\r\n        </li>\r\n\r\n\r\n\r\n    </div>\r\n</body>","import { Component, OnInit } from '@angular/core';\r\nimport { StreamChat, ChannelData, Message, User } from 'stream-chat';\r\nimport axios from 'axios';\r\nimport { Console } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-room-sm',\r\n  templateUrl: './room-sm.component.html',\r\n  styleUrls: ['./room-sm.component.scss']\r\n})\r\nexport class RoomSmComponent implements OnInit {\r\n\r\n  regexuname: RegExp = /^[A-Za-z_]+$/;\r\n  regexrnumber: RegExp = /\\d\\d\\d/\r\n  readyToJoin: Boolean = false;\r\n  title = 'angular-chat';\r\n  channel: ChannelData;\r\n  username;\r\n  roomnumber;\r\n  messages: Message[] = [];\r\n  newMessage = '';\r\n  channelList: ChannelData[];\r\n  chatClient: any;\r\n  currentUser: User;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    console.log()\r\n  }\r\n\r\n  setupRoom(uname: Text, roomnumber: Text) {\r\n    this.username = uname;\r\n    this.username.toString();\r\n    this.roomnumber = roomnumber;\r\n    this.roomnumber.toString();\r\n\r\n    if (!this.regexuname.test(this.username) || !this.regexrnumber.test(this.roomnumber)) {\r\n      document.getElementById(\"regexnameWarning\").style.backgroundColor = \"red\";\r\n      document.getElementById(\"regexnameWarning\").style.backgroundColor = \"red\";\r\n      document.getElementById(\"regexnameWarning\").innerHTML = \"Username :Only alphanumeric characters and underscore are allowed (Spaces not permitted). <br> Room-Number: Only numbers allowed, min 3 digits.\";\r\n    }\r\n    else {\r\n      this.joinChat();\r\n    }\r\n\r\n  }\r\n\r\n  // u wanted to change the reference of the roomnumber since u need to give it with the API-POST to the new JoinSM-route\r\n  async joinChat() {\r\n    const username = this.username;\r\n    const roomnumber = this.roomnumber;\r\n\r\n    try {\r\n      // calls server on the join route with username, then recieves token and api key\r\n      const response = await axios.post('http://localhost:5500/create', {\r\n        username,\r\n        roomnumber\r\n      });\r\n      console.log(response.status);\r\n      if (response.status == 202) {\r\n        document.getElementById(\"regexnameWarning\").innerHTML = \"Room already exists\";\r\n        return;\r\n      }\r\n      const { token } = response.data;\r\n      const apiKey = response.data.api_key;\r\n\r\n      this.chatClient = new StreamChat(apiKey);\r\n\r\n      this.currentUser = await this.chatClient.setUser(\r\n        {\r\n          id: username,\r\n          name: username,\r\n        },\r\n        token\r\n      );\r\n\r\n      // connect to channel talkshop channel and listen for new messages\r\n      const channel = this.chatClient.channel('team', roomnumber);\r\n      await channel.watch();\r\n      this.channel = channel;\r\n      this.readyToJoin = true;\r\n\r\n      this.messages = channel.state.messages;\r\n\r\n      channel.on('message.new', event => {\r\n        // add new message to message-array\r\n        this.messages = [...this.messages, event.message];\r\n      });\r\n\r\n      channel.on('message.updated', event => {\r\n        // add new message to message-array\r\n        this.messages = channel.state.messages;\r\n      });\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n      return;\r\n    }\r\n  }\r\n\r\n  async removeRoom() {\r\n    const username = this.username;\r\n    const roomnumber = this.roomnumber;\r\n\r\n    const response = await axios.post('http://localhost:5500/delete', {\r\n      username,\r\n      roomnumber\r\n    });\r\n    this.readyToJoin = false;\r\n\r\n  }\r\n}\r\n","<body>\r\n    <div *ngIf=\"!readyToJoin\">\r\n        <label for=\"uname\">Set your Username:</label><br>\r\n        <input type=\"text\" [(ngModel)]=\"uname\"><br><br>\r\n        <label for=\"roomnumber\">Set your room Number:</label><br>\r\n        <input type=\"text\" [(ngModel)]=\"roomnumber\"><br><br>\r\n        <p id=\"regexnameWarning\"></p>\r\n        <button (click)=\"setupRoom(uname,roomnumber)\">Create Room</button>\r\n    </div>\r\n    <div *ngIf=\"readyToJoin\">\r\n        <h1>Developers can now Join!</h1>\r\n        <h2>Your room number: {{roomnumber}}</h2>\r\n        <button class=\"btn2\" (click)=\"removeRoom()\">remove room</button>\r\n        <br><br><br>\r\n        <li *ngFor=\"let message of messages\">\r\n            {{ message.text }}\r\n        </li>\r\n    </div>\r\n</body>","import { Component, OnInit } from '@angular/core';\n// import { changeRole } from '../ext.actions'\nimport { Router } from '@angular/router'\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-startup-screen',\n  templateUrl: './startup-screen.component.html',\n  styleUrls: ['./startup-screen.component.scss']\n})\nexport class StartupScreenComponent implements OnInit {\n\n  role: string;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  roleSM(): void {\n    this.router.navigate(['/roomsm']);\n  }\n\n  roleDev(): void {\n    this.router.navigate(['/roomdev']);\n  }\n}\n","<body id=\"window\">\n    <h1>Choose your role</h1> <br>\n    <button (click)=\"roleSM()\">Scrum Master</button>\n    <p>As scrum master you will be able to create a room, start a new round and invite developers. You will *not* have\n        the\n        right to vote</p>\n    <br />\n    <br />\n    <button (click)=\"roleDev()\">Developer</button>\n    <p>As developer you will be able to join a preoviously created room and have access to vote.</p><br><br>\n    <router-outlet></router-outlet>\n</body>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}