{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/ext.actions.ts","./src/app/ext.reducer.ts","./src/app/startup-screen/startup-screen.component.ts","./src/app/startup-screen/startup-screen.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Angular-chrome-extension';\n}\n","<app-startup-screen></app-startup-screen>\r\n<p>test</p>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { StoreModule } from '@ngrx/store';\nimport { reducer } from './ext.reducer'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StartupScreenComponent } from './startup-screen/startup-screen.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartupScreenComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    StoreModule.forRoot(reducer)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { createAction, props, Action } from '@ngrx/store';\r\n\r\nexport const getRole = createAction(\r\n    '[APP Page] Role Chosen Successfully',\r\n    props<{ payload: any }>()\r\n);\r\n","import { createReducer, on, State, Action } from '@ngrx/store';\r\nimport { getRole } from './ext.actions';\r\n\r\ninterface AppState {\r\n\r\n}\r\n\r\nconst initialState: AppState = {\r\n    userProfile: null\r\n};\r\n\r\n\r\nconst appReducer = createReducer(\r\n    initialState,\r\n    on(getRole, (state, { payload }) => {\r\n        console.log(state, payload);\r\n        return { ...state, payload };\r\n    })\r\n);\r\n\r\nexport function reducer(state = initialState, action: Action) {\r\n    return appReducer(state, action);\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { getRole } from '../ext.actions'\n\n@Component({\n  selector: 'app-startup-screen',\n  templateUrl: './startup-screen.component.html',\n  styleUrls: ['./startup-screen.component.scss']\n})\nexport class StartupScreenComponent implements OnInit {\n\n  role: string;\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n  }\n\n  roleSM(): void {\n    this.role = \"Scrum Master\"\n    this.store.dispatch(getRole({ payload: getRole }));\n  }\n\n  roleDev(): void {\n    this.role = \"Developer\";\n    this.store.dispatch(getRole({ payload: getRole }));\n  }\n}\n","<h1>Choose your role</h1>\n<button (click)=\"roleSM()\">Scrum Master</button>\n<p>As scrum master you will be able to create a room, start a new round and invite developers. You will *not* have the\n    right to vote</p>\n<br />\n<br />\n<button (click)=\"roleDev()\">Developer</button>\n<p>As developer you will be able to join a preoviously created room and have access to vote.</p>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}