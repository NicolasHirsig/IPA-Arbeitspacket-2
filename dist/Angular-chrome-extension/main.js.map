{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/room-dev/room-dev.component.ts","./src/app/room-dev/room-dev.component.html","./src/app/room-sm/room-sm.component.ts","./src/app/room-sm/room-sm.component.html","./src/app/startup-screen/startup-screen.component.ts","./src/app/startup-screen/startup-screen.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RoomDevComponent } from './room-dev/room-dev.component'\nimport { RoomSmComponent } from './room-sm/room-sm.component'\nimport { StartupScreenComponent } from './startup-screen/startup-screen.component'\n\nconst routes: Routes = [\n  { path: 'roomdev', component: RoomDevComponent },\n  { path: 'roomsm', component: RoomSmComponent },\n  { path: '', component: StartupScreenComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Angular-chrome-extension';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StartupScreenComponent } from './startup-screen/startup-screen.component';\nimport { RoomDevComponent } from './room-dev/room-dev.component';\nimport { RoomSmComponent } from './room-sm/room-sm.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartupScreenComponent,\n    RoomDevComponent,\n    RoomSmComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { StreamChat, ChannelData, Message, User, AnyResource } from 'stream-chat';\nimport axios from 'axios';\nimport { type } from 'os';\nimport { randomBytes } from 'crypto';\nimport { typeofExpr } from '@angular/compiler/src/output/output_ast';\n\n@Component({\n  selector: 'app-room-dev',\n  templateUrl: './room-dev.component.html',\n  styleUrls: ['./room-dev.component.scss'],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RoomDevComponent implements OnInit {\n\n  regexuname: RegExp = /^[A-Za-z_]+$/;\n  regexrnumber: RegExp = /\\d\\d\\d/\n  readyToJoin: Boolean;\n  title = 'angular-chat';\n  channel: ChannelData;\n  username;\n  roomnumber;\n  messages: Message[] = [];\n  channelList: ChannelData[];\n  chatClient: any;\n  currentUser: User;\n  voteStr: string;\n  message: any;\n  importantMessage: string;\n  showMessage: boolean;\n\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  ngOnInit(): void {\n  }\n\n  setupRoom(uname: Text, roomnumber: Text) {\n    this.username = uname;\n    this.username.toString();\n    this.roomnumber = roomnumber;\n    this.roomnumber.toString();\n\n    if (!this.regexuname.test(this.username) || !this.regexrnumber.test(this.roomnumber)) {\n      document.getElementById(\"regexnameWarning\").style.backgroundColor = \"#CB1A11\";\n      document.getElementById(\"regexnameWarning\").style.color = \"white\";\n      document.getElementById(\"regexnameWarning\").innerHTML = \"Username: Only alphanumeric characters and underscore (no spaces). <br> Room-Number: Only numbers allowed, min 3 digits.\";\n    }\n    else {\n      this.joinChat();\n    }\n  }\n\n  // u wanted to change the reference of the roomnumber since u need to give it with the API-POST to the new JoinSM-route\n  async joinChat() {\n    try {\n      // calls server on the join route with username, then recieves token and api key\n      const response = await axios.post('http://localhost:5500/join', {\n        username: this.username,\n        roomnumber: this.roomnumber\n      });\n\n      const { token } = response.data;\n      console.log(response.data);\n      const apiKey = response.data.api_key;\n      this.chatClient = new StreamChat(apiKey);\n\n      if (response.status == 202) {\n        document.getElementById(\"regexnameWarning\").innerHTML = \"Room doesn't Exist\";\n        return;\n      }\n\n      this.currentUser = await this.chatClient.setUser(\n        {\n          id: this.username,\n          name: this.username,\n        },\n        token\n      );\n\n      // connect to channel and listen for new messages\n      const channel = this.chatClient.channel('team', this.roomnumber);\n      await channel.watch();\n      this.channel = channel;\n      this.readyToJoin = true;\n\n      this.messages = channel.state.messages;\n\n      channel.on('message.new', event => {\n        // add new message to message-array\n        this.messages = [...this.messages, event.message];\n      });\n\n      channel.on('message.updated', event => {\n        this.messages = channel.state.messages;\n        console.log(event)\n        if (event.message.user.role === \"admin\") {\n          // if event.message.reveal exists, return its value (in typescrit :C)\n          this.showMessage = event.message.reveal ? event.message.reveal : false;\n        }\n      });\n\n      try {\n        this.message = await this.channel.sendMessage({\n          text: \"\"\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      console.log(this.messages);\n\n    } catch (err) {\n      console.log(err);\n      return;\n    }\n  }\n\n  async updateMessage(vote) {\n    if (this.voteStr === '') {\n      return;\n    }\n\n    this.message.message.text = vote;\n    try {\n      console.log(this.message);\n      await this.chatClient.updateMessage(this.message.message);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n","<body class=\"component\">\r\n    <div *ngIf=\"!readyToJoin\" class=\"panel2\">\r\n        <h1>Join a Room</h1>\r\n        <label for=\"uname\">Set your Username:</label><br>\r\n        <input type=\"text\" [(ngModel)]=\"uname\"><br><br>\r\n        <label for=\"roomnumber\">Room Number given by SM:</label><br>\r\n        <input type=\"text\" [(ngModel)]=\"roomnumber\"><br><br>\r\n        <p id=\"regexnameWarning\"></p>\r\n        <button (click)=\"setupRoom(uname,roomnumber)\">Join Room</button>\r\n    </div>\r\n    <div *ngIf=\"readyToJoin\" class=\"panel2\">\r\n        <h1>You can vote now!</h1>\r\n        <h2>Your room number: {{roomnumber}}</h2>\r\n        <br><br><br>\r\n        <button (click)=\"updateMessage('0.5')\">0.5</button>\r\n        <button (click)=\"updateMessage('1')\">1</button>\r\n        <button (click)=\"updateMessage('2')\">2</button>\r\n        <button (click)=\"updateMessage('3')\">3</button>\r\n        <button (click)=\"updateMessage('5')\">5</button>\r\n        <button (click)=\"updateMessage('8')\">8</button>\r\n        <button (click)=\"updateMessage('13')\">13</button>\r\n        <button (click)=\"updateMessage('20')\">20</button>\r\n        <button (click)=\"updateMessage('?')\">?</button>\r\n        <p> Most recent: {{ channel.state.messages[ channel.state.messages.length - 1 ].text }}</p>\r\n        <ul style=\"list-style-type:none;\">\r\n            <li *ngFor=\"let message of messages; let i = index\">\r\n                <p *ngIf=\"showMessage || message.user.id == username || i == 0\"> {{ message.text }} </p>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</body>","import { Component, OnInit } from '@angular/core';\r\nimport { StreamChat, ChannelData, Message, User } from 'stream-chat';\r\nimport axios from 'axios';\r\nimport { Console } from 'console';\r\n\r\n@Component({\r\n  selector: 'app-room-sm',\r\n  templateUrl: './room-sm.component.html',\r\n  styleUrls: ['./room-sm.component.scss']\r\n})\r\nexport class RoomSmComponent implements OnInit {\r\n\r\n  regexuname: RegExp = /^[A-Za-z_]+$/;\r\n  readyToCreate: Boolean;\r\n  title = 'angular-chat';\r\n  channel: ChannelData;\r\n  username;\r\n  roomnumber;\r\n  messages: Message[] = [];\r\n  newMessage = '';\r\n  channelList: ChannelData[];\r\n  chatClient: any;\r\n  currentUser: User;\r\n  message: any;\r\n  showMessage: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    console.log()\r\n  }\r\n\r\n  setupRoom(uname: Text, roomnumber: Text) {\r\n    this.username = uname;\r\n    this.username.toString();\r\n    const rand = Math.floor(Math.random() * Math.floor(9000));\r\n    // due to the random number being converted to string, the number gets changed but stays in the realm (dont ask me why)\r\n    this.roomnumber = rand.toString(8);\r\n\r\n    if (!this.regexuname.test(this.username)) {\r\n      document.getElementById(\"regexnameWarning\").style.backgroundColor = \"#CB1A11\";\r\n      document.getElementById(\"regexnameWarning\").style.color = \"white\";\r\n      document.getElementById(\"regexnameWarning\").innerHTML = \"Username: Only alphanumeric characters and underscore (no spaces).\";\r\n    }\r\n    else {\r\n      this.createChat();\r\n    }\r\n  }\r\n\r\n  async resetMessages() {\r\n    for (let i in this.messages) {\r\n      let j: number = +i;\r\n      if (this.messages[j + 1]) {\r\n        console.log(typeof this.messages[j + 1].id);\r\n        const message = { id: this.messages[j + 1].id, text: \"\" }\r\n        try {\r\n          await this.chatClient.updateMessage(message);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    }\r\n    this.message.message.reveal = false;\r\n    try {\r\n      await this.chatClient.updateMessage(this.message.message);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n\r\n  async createChat() {\r\n    const username = this.username;\r\n    const roomnumber = this.roomnumber;\r\n\r\n    try {\r\n      // calls server on the join route with username, then recieves token and api key\r\n      const response = await axios.post('http://localhost:5500/create', {\r\n        username,\r\n        roomnumber\r\n      });\r\n      console.log(response.status);\r\n      if (response.status == 202) {\r\n        document.getElementById(\"regexnameWarning\").innerHTML = \"Room already exists\";\r\n        return;\r\n      }\r\n      const { token } = response.data;\r\n      const apiKey = response.data.api_key;\r\n\r\n      this.chatClient = new StreamChat(apiKey);\r\n\r\n      this.currentUser = await this.chatClient.setUser(\r\n        {\r\n          id: username,\r\n          name: username,\r\n          role: \"admin\"\r\n        },\r\n        token\r\n      );\r\n\r\n      const channel = this.chatClient.channel('team', roomnumber);\r\n      await channel.watch();\r\n      this.channel = channel;\r\n      this.readyToCreate = true;\r\n\r\n      channel.on('message.new', event => {\r\n        this.messages = [...this.messages, event.message];\r\n      });\r\n\r\n      channel.on('message.updated', event => {\r\n        this.messages = channel.state.messages;\r\n        console.log(event)\r\n        if (event.message.user.role === \"admin\") {\r\n          // if event.message.reveal exists, return its value (in typescrit :C)\r\n          this.showMessage = event.message.reveal ? event.message.reveal : false;\r\n        }\r\n      });\r\n\r\n      try {\r\n        this.message = await this.channel.sendMessage({\r\n          text: \"Current Votes:\",\r\n          reveal: false\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n\r\n    } catch (err) {\r\n      console.log(err);\r\n      return;\r\n    }\r\n  }\r\n\r\n  async revealMessages() {\r\n    this.message.message.reveal = true;\r\n    try {\r\n      await this.chatClient.updateMessage(this.message.message);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  async removeRoom() {\r\n    this.message.message.text = \"the room has been closed.\"\r\n    try {\r\n      await this.chatClient.updateMessage(this.message.message);\r\n      await axios.post('http://localhost:5500/delete', {\r\n        roomnumber: this.roomnumber\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    this.readyToCreate = false;\r\n  }\r\n}\r\n","<body>\r\n    <div *ngIf=\"!readyToCreate\" class=\"panel2 component2\">\r\n        <label for=\"uname\">Set your Username:</label><br>\r\n        <input type=\"text\" [(ngModel)]=\"uname\"><br><br>\r\n        <label> Your room number will be generated randomly</label><br>\r\n        <p id=\"regexnameWarning\"></p>\r\n        <button (click)=\"setupRoom(uname,roomnumber)\">Create Room</button>\r\n    </div>\r\n    <div *ngIf=\"readyToCreate\" class=\"panel2 component\">\r\n        <h1>Developers can now Join!</h1>\r\n        <h2>Your room number: {{roomnumber}}</h2>\r\n        <button (click)=\"revealMessages()\">Reveal Votes!!</button>\r\n        <button (click)=\"resetMessages()\">Start new round</button>\r\n        <br><br><br>\r\n        <ul style=\"list-style-type:none;\">\r\n            <li *ngFor=\"let message of messages; let i = index\">\r\n                <p *ngIf=\"showMessage || i == 0\"> {{ message.text }} </p>\r\n            </li>\r\n        </ul>\r\n        <button (click)=\"removeRoom()\">remove room</button>\r\n        <br><br><br>\r\n    </div>\r\n</body>","import { Component, OnInit } from '@angular/core';\n// import { changeRole } from '../ext.actions'\nimport { Router } from '@angular/router'\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-startup-screen',\n  templateUrl: './startup-screen.component.html',\n  styleUrls: ['./startup-screen.component.scss']\n})\nexport class StartupScreenComponent implements OnInit {\n\n  role: string;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  roleSM(): void {\n    this.router.navigate(['/roomsm']);\n  }\n\n  roleDev(): void {\n    this.router.navigate(['/roomdev']);\n  }\n}\n","<body id=\"window\">\n    <h1>Choose your role</h1> <br>\n    <div class=\"panel\">\n        <button (click)=\"roleSM()\">Scrum Master</button>\n        <p>As scrum master you will be able to create a room, start a new round and invite developers. You will *not*\n            have the right to vote</p>\n    </div>\n    <br>\n    <br>\n    <div class=\"panel\">\n        <button (click)=\"roleDev()\">Developer</button>\n        <p>As developer you will be able to join a preoviously created room and have access to vote.</p>\n    </div>\n    <br>\n    <br>\n    <router-outlet></router-outlet>\n</body>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}